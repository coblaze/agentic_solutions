# anonymise.py
import json
from faker import Faker
from pathlib import Path

fake = Faker()

# Input and output file paths
FILE1_IN = Path("file1.json")
FILE2_IN = Path("file2.json")
FILE1_OUT = Path("file1_out.json")
FILE2_OUT = Path("file2_out.json")

# Suffix to append to specified fields
SUFFIX = "--CO"
# Keys to which SUFFIX should be appended
TARGET_KEYS = ["ucid", "interactionId", "transaction_id", "CCID"]


def recurse_append(obj):
    """
    Recursively append SUFFIX to all TARGET_KEYS and to all '$oid' strings.
    """
    if isinstance(obj, dict):
        for k, v in obj.items():
            if k in TARGET_KEYS and isinstance(v, str):
                obj[k] = v + SUFFIX
            elif k == '$oid' and isinstance(v, str):
                obj[k] = v + SUFFIX
            else:
                recurse_append(v)
    elif isinstance(obj, list):
        for item in obj:
            recurse_append(item)


def main():
    # Load JSON files
    docs1 = json.loads(FILE1_IN.read_text())
    docs2 = json.loads(FILE2_IN.read_text())

    # Build mapping from original transcriptRefid to new values
    mapping = {}
    for d in docs1:
        orig_oid = d.get("transcriptRefid", {}).get("$oid")
        if not orig_oid:
            continue
        # Generate fake accountNumber and customerName
        new_account = fake.unique.random_number(digits=16, fix_len=True)
        new_name = fake.name()
        d["accountNumber"] = str(new_account)
        d["customerName"] = new_name

        # Append suffix to specified fields and transcriptRefid
        recurse_append(d)

        # Record mapping
        new_oid = d["transcriptRefid"]["$oid"]
        mapping[orig_oid] = {
            "new_oid": new_oid,
            "new_account": d["accountNumber"],
            "new_name": new_name
        }

    # Apply updates to file2
    for d in docs2:
        oid = d.get("_id", {}).get("$oid")
        if oid in mapping:
            # Update document ID, accountNumber, and customerName
            d["_id"]["$oid"] = mapping[oid]["new_oid"]
            d["accountNumber"] = mapping[oid]["new_account"]
            d["customerName"] = mapping[oid]["new_name"]

            # Append suffix to other specified fields
            recurse_append(d)

    # Write out modified JSON
    FILE1_OUT.write_text(json.dumps(docs1, indent=2))
    FILE2_OUT.write_text(json.dumps(docs2, indent=2))
    print(f"Wrote {len(docs1)} docs to {FILE1_OUT} and {len(docs2)} docs to {FILE2_OUT}")


if __name__ == "__main__":
    main()
